@startuml
'https://plantuml.com/class-diagram

class ApplicationMenuInicial {
    +void start(Stage stage) throws IOException
    +static void main(String[] args)
}

ApplicationMenuInicial --|> javafx.application.Application
ApplicationMenuInicial ..> javafx.stage.Stage : uses
ApplicationMenuInicial ..> javafx.fxml.FXMLLoader : uses
ApplicationMenuInicial ..> javafx.scene.Parent : uses
ApplicationMenuInicial ..> javafx.scene.Scene : uses
ApplicationMenuInicial ..> java.io.IOException : throws
ApplicationMenuInicial ..> URL : uses

class DatosJuego {
    -ListaEnlazada<Estudiante> estudiantes
    -ListaEnlazada<Recursos> recursos
    -ListaEnlazada<Estudiante> historialEstudiantes
    -ListaEnlazada<Recursos> historialRecursos
    -int numRecursos
    -int numEstudiantes
    -int maximoEstudiantesPorCelda
    -int maximoRecursosPorCelda
    -int filasDelTablero
    -int columnasDelTablero
    -double probRecurso
    -int turnosIniciales
    -double probAgua
    -double probComida
    -double probMontana
    -double probTesoro
    -double probBiblioteca
    -double probPozo
    -double aumentoVidaAgua
    -double aumentoVidaComida
    -double reduccionVidaMontana
    -double aumentoProbReproduccion
    -double aumentoProbClonacion
    -int turnosRestantesAgua
    -int turnosRestantesComida
    -int turnosRestantesMontana
    -int turnosRestantesBiblioteca
    -int turnosRestantesTesoro
    -int turnosRestantesPozo
    -int turnosVidaIniciales
    -double probReproduccionEstudiante
    -double probClonacionEstudiante
    -double probMejorarANormal
    -double probMejorarAAvanzado
    -Boolean isPausado
    -boolean isSave
    -String rutaArchivo
    -ZombieStudentsLife zombieStudentsLife
    -int turnoActual
    +DatosJuego(int, double, double, double, double, double, int, double, double, double, double, double, double, int, int, double, double, int, int, int)
    +DatosJuego()
    // MÃ©todos getter y setter
    +int getTurnosVidaIniciales()
    +void setTurnosVidaIniciales(int)
    +int getTurnosRestantesAgua()
    +void setTurnosRestantesAgua(int)
    +int getTurnosRestantesComida()
    +void setTurnosRestantesComida(int)
    +int getTurnosRestantesMontana()
    +void setTurnosRestantesMontana(int)
    +int getTurnosRestantesBiblioteca()
    +void setTurnosRestantesBiblioteca(int)
    +int getTurnosRestantesTesoro()
    +void setTurnosRestantesTesoro(int)
    +int getTurnosRestantesPozo()
    +void setTurnosRestantesPozo(int)
    +double getProbReproduccionEstudiante()
    +void setProbReproduccionEstudiante(double)
    +double getProbClonacionEstudiante()
    +void setProbClonacionEstudiante(double)
    +double getProbRecurso()
    +void setProbRecurso(double)
    +int getNumEstudiantes()
    +void setNumEstudiantes(int)
    +int getNumRecursos()
    +void setNumRecursos(int)
    +double getProbAgua()
    +void setProbAgua(double)
    +double getProbComida()
    +void setProbComida(double)
    +double getProbMontana()
    +void setProbMontana(double)
    +double getProbTesoro()
    +void setProbTesoro(double)
    +double getProbBiblioteca()
    +void setProbBiblioteca(double)
    +double getProbPozo()
    +void setProbPozo(double)
    +double getAumentoVidaAgua()
    +void setAumentoVidaAgua(double)
    +double getAumentoVidaComida()
    +void setAumentoVidaComida(double)
    +double getReduccionVidaMontana()
    +void setReduccionVidaMontana(double)
    +double getAumentoProbReproduccion()
    +void setAumentoProbReproduccion(double)
    +double getAumentoProbClonacion()
    +void setAumentoProbClonacion(double)
    +int getFilasDelTablero()
    +void setFilasDelTablero(int)
    +int getColumnasDelTablero()
    +void setColumnasDelTablero(int)
    +int getMaximoEstudiantesPorCelda()
    +void setMaximoEstudiantesPorCelda(int)
    +int getMaximoRecursosPorCelda()
    +void setMaximoRecursosPorCelda(int)
    +double getProbMejorarANormal()
    +void setProbMejorarANormal(double)
    +double getProbMejorarAAvanzado()
    +void setProbMejorarAAvanzado(double)
    +Boolean isPausado()
    +void setPausado(Boolean)
    +ZombieStudentsLife getZombieStudentsLife()
    +void setZombieStudentsLife(ZombieStudentsLife)
    +ListaEnlazada<Estudiante> getEstudiantes()
    +void setEstudiantes(ListaEnlazada<Estudiante>)
    +ListaEnlazada<Recursos> getRecursos()
    +void setRecursos(ListaEnlazada<Recursos>)
    +int getTurnoActual()
    +void setTurnoActual(int)
    +int getTurnosIniciales()
    +void setTurnosIniciales(int)
    +int generarEnteroAleatorio(int, int)
    +Celda celdaAleatoria(int, int)
    +Estudiante obtenerEstudianteAleatorio()
    +Recursos obtenerRecursoAleatorio()
    +boolean isSave()
    +void setSave(boolean)
    +String getRutaArchivo()
    +void setRutaArchivo(String)
    +ListaEnlazada<Estudiante> getHistorialEstudiantes()
    +void setHistorialEstudiantes(ListaEnlazada<Estudiante>)
    +ListaEnlazada<Recursos> getHistorialRecursos()
    +void setHistorialRecursos(ListaEnlazada<Recursos>)
    +void guardarArchivo(String)
    +static DatosJuego cargarArchivo(String)
}


DatosJuego ..> ListaEnlazada : uses
DatosJuego ..> ElementoLE : uses
DatosJuego ..> Estudiante : uses
DatosJuego ..> Recursos : uses
DatosJuego ..> Cola : uses
DatosJuego ..> GsonRecursos : uses
DatosJuego ..> GsonEstudiante : uses
DatosJuego ..> GsonListaSimple : uses
DatosJuego ..> GsonCola : uses
DatosJuego ..> Celda : uses
DatosJuego ..> ZombieStudentsLife : uses
DatosJuego ..> Gson : uses
DatosJuego ..> GsonBuilder : uses
DatosJuego ..> Random : uses
DatosJuego ..> FileWriter : uses
DatosJuego ..> FileReader : uses
DatosJuego ..> IOException : throws

class DatosJuegoProperties {
    -DatosJuego dato
    -IntegerProperty filasDelTablero
    -IntegerProperty columnasDelTablero
    -ObjectProperty<Integer> turnosVidaIniciales
    -ObjectProperty<Integer> turnosRestantesAgua
    -ObjectProperty<Integer> turnosRestantesComida
    -ObjectProperty<Integer> turnosRestantesMontana
    -ObjectProperty<Integer> turnosRestantesBiblioteca
    -ObjectProperty<Integer> turnosRestantesTesoro
    -ObjectProperty<Integer> turnosRestantesPozo
    -DoubleProperty probReproEstudiante
    -DoubleProperty probClonEstudiante
    -DoubleProperty probMejoraToNormal
    -DoubleProperty probMejoraToAvanzado
    -DoubleProperty probAgua
    -DoubleProperty probComida
    -DoubleProperty probMontana
    -DoubleProperty probTesoro
    -DoubleProperty probBiblioteca
    -DoubleProperty probPozo
    -DoubleProperty aumentoTurnosAgua
    -DoubleProperty aumentoTurnosComida
    -DoubleProperty reduccionTurnosMontana
    -DoubleProperty aumentoProbRepro
    -DoubleProperty aumentoProbClon
    -static final Logger log
    +DatosJuegoProperties(DatosJuego)
    +DatosJuego getDato()
    +void setDato(DatosJuego)
    +void setDatoInitialize(DatosJuego)
    +void commit()
    +void rollback(Tab)
    +ObjectProperty<Integer> turnosVidaInicialesProperty()
    +Property<Number> probReproEstudianteProperty()
    +Property<Number> probClonEstudianteProperty()
    +Property<Number> probMejorarANormalProperty()
    +Property<Number> probMejorarAAvanzadoProperty()
    +Property<Number> probAguaProperty()
    +Property<Number> probComidaProperty()
    +Property<Number> probMontanaProperty()
    +Property<Number> probTesoroProperty()
    +Property<Number> probBibliotecaProperty()
    +Property<Number> probPozoProperty()
    +ObjectProperty<Integer> turnosRestantesAguaProperty()
    +ObjectProperty<Integer> turnosRestantesComidaProperty()
    +ObjectProperty<Integer> turnosRestantesMontanaProperty()
    +ObjectProperty<Integer> turnosRestantesBibliotecaProperty()
    +ObjectProperty<Integer> turnosRestantesTesoroProperty()
    +ObjectProperty<Integer> turnosRestantesPozoProperty()
    +Property<Number> aumentoTurnosAguaProperty()
    +Property<Number> aumentoTurnosComidaProperty()
    +Property<Number> reduccionTurnosMontanaProperty()
    +Property<Number> aumentoProbReproProperty()
    +Property<Number> aumentoProbClonProperty()
    +Property<Number> filasDelTableroProperty()
    +Property<Number> columnasDelTableroProperty()
    -void rollbackEstudiantes()
    -void rollbackRecursos()
    -void rollbackTablero()
}

DatosJuegoProperties ..> DatosJuego : uses
DatosJuegoProperties ..> Tab : uses
DatosJuegoProperties ..> IntegerProperty : uses
DatosJuegoProperties ..> ObjectProperty : uses
DatosJuegoProperties ..> DoubleProperty : uses
DatosJuegoProperties ..> Property : uses
DatosJuegoProperties ..> Logger : uses

class CeldaController {
    - static final Logger log
    - Parent root
    - boolean isListenerActive
    - DatosJuego dato
    - Celda celda
    - VBox estudiantesVBox
    - VBox recursosVBox
    - Label alertaCasillaLabel
    - ChoiceBox<String> estudiantesAddBox
    - ChoiceBox<String> recursosAddBox
    - Label elementoLabel
    - Button botonQuitar
    - final String[] tiposEstudiantes
    - final String[] tiposRecursos

    + CeldaController()
    + CeldaController(DatosJuego, Celda)
    + Parent getRoot()
    + void initialize(URL, ResourceBundle)
    + void addEstudiante(String)
    + <T extends Estudiante> void addEstudiante(Class<T>)
    + <T extends Estudiante> void addEstudiantePrinc(Class<?>, boolean, Estudiante)
    + void delEstudiante(ActionEvent)
    + void addRecurso(String)
    + <T extends Recursos> void addRecursoPrinc(Class<?>, boolean, T)
    + void delRecurso(ActionEvent)
}

CeldaController ..> DatosJuego : uses
CeldaController ..> Celda : uses
CeldaController ..> VBox : uses
CeldaController ..> Label : uses
CeldaController ..> ChoiceBox : uses
CeldaController ..> Button : uses
CeldaController ..> Logger : uses

class MenuEntradaController {
    -Label labelNombre
    -Button buttonContinuar
    -Button buttonSalir
    -Button buttonVolver
    -TextField textFieldNombre
    -TextField textFieldDNI
    -ComboBox<String> comboBoxAcceso
    -HashMap<String, Jugador> jugadores
    -Jugador jugador
    -DatosJuego datosJuego
    -FileOutputStream ranking
    +setDatosJuego(DatosJuego)
    +Jugador getJugador()
    +HashMap<String, Jugador> getJugadores()
    +DatosJuego getDatosJuego()
    +void setDatosJuego(DatosJuego)
    +void initialize()
    +void handleSalir(ActionEvent)
    +void handleVolver(ActionEvent)
    +void comprobarAcceso()
    +void comprobarRegistro()
    +void handleContinuar(ActionEvent)
    +private void mostrarAlerta(String)
}

MenuEntradaController ..> DatosJuego : uses
MenuEntradaController ..> Label : uses
MenuEntradaController ..> Button : uses
MenuEntradaController ..> TextField : uses
MenuEntradaController ..> ComboBox : uses
MenuEntradaController ..> HashMap : uses
MenuEntradaController ..> FileOutputStream : uses
MenuEntradaController ..> Jugador : uses
MenuEntradaController ..> ActionEvent : uses

class MenuInicialController {
    -Button buttonPlay
    +void goNewPlay(ActionEvent) throws IOException
    +void exitGame()
}

MenuInicialController ..> Button : uses
MenuInicialController ..> ActionEvent : uses
MenuInicialController ..> IOException : throws

class SeleccionarPartidaController {
    -static final Logger log
    -DatosJuego datosJuego
    -ListView<String> listaDeFicheros
    +void initialize(URL, ResourceBundle)
    +DatosJuego getDatosJuego()
    +void setDatosJuego(DatosJuego)
    +void onBotonCargarFicheroClick(ActionEvent)
    +void onBottonNuevoClick(ActionEvent)
    +void onBotonVolverMenuClick(ActionEvent)
    +String[] getNombreFicheros()
    +void onBotonCargarPartidaClick(ActionEvent)
}

SeleccionarPartidaController ..> Logger : uses
SeleccionarPartidaController ..> DatosJuego : uses
SeleccionarPartidaController ..> ListView : uses
SeleccionarPartidaController ..> URL : uses
SeleccionarPartidaController ..> ResourceBundle : uses
SeleccionarPartidaController ..> ActionEvent : uses

class TableroController {
    -DatosJuego datos
    -ZombieStudentsLife zombieStudentsLife
    -Label turnoLabel
    -GridPane gridTablero
    +DatosJuego getDatos()
    +void setDatos(DatosJuego)
    +ZombieStudentsLife getZombieStudentsLife()
    +void setZombieStudentsLife(ZombieStudentsLife)
    +TableroController(DatosJuego, ZombieStudentsLife)
    +TableroController()
    -void avanzarZombieStudentsLife(boolean, Celda)
    +void onBottonPausarClick(ActionEvent)
    +void onBottonPasarDeTurnoClick(ActionEvent)
    +void onBottonReanudarClick(ActionEvent)
    +void onBottonConfiguracionToClick(ActionEvent)
    +void onBottonCerrarClick()
    +void onBottonPantallaCompletaToClick()
    +void onBottonMinimizarClick()
    +void onBottonMenuInicialClick(ActionEvent)
    +void onBottonGuardarPartidaClick(ActionEvent)
    +void onBottonGuardarComoClick(ActionEvent)
    +void mostrarElementosCelda(Celda)
    -GridPane crearGridTablero(Tablero, Parent)
    +void crearTablero(Tablero)
    -static TreeItem<Estudiante> crearArbolGenealogico(BST<Estudiante>)
    -static void crearArbolGenealogicoPrinc(Nodo<Estudiante>, TreeItem<Estudiante>)
    +void onBottonFinalizarPartidaClick(ActionEvent)
    +void terminarPartida(DatosJuego)
    +void onBottonSalirClick(ActionEvent)
    -Celda obtenerCeldaDeEvento(Event)
    -boolean isDescendant(Node, Node)
    +void inicializar(DatosJuego, ZombieStudentsLife)
    -void mostrarAlertaError(String, String)
}

TableroController ..> DatosJuego : uses
TableroController ..> ZombieStudentsLife : uses
TableroController ..> Label : uses
TableroController ..> GridPane : uses
TableroController ..> ActionEvent : uses
TableroController ..> Celda : uses
TableroController ..> BST : uses
TableroController ..> TreeItem : uses
TableroController ..> Node : uses
TableroController ..> Event : uses

class XPersonalizacionController {
    -Tab tabActual
    -Button buttonGuardar
    -TabPane tabPaneConfiguracion
    -Spinner<Integer> turnosVidaInicialesSpinner
    -Slider probReproEstudianteSlider
    -Slider probClonEstudianteSlider
    -Slider probMejoraNormalSlider
    -Slider probMejoraAvanzadoSlider
    -Spinner<Integer> aguaTurnosRestantesSpinner
    -Slider probAparAguaSlider
    -Slider aguaAumentoVidaSlider
    -Spinner<Integer> comidaTurnosRestantesSpinner
    -Slider probAparComidaSlider
    -Slider comidaAumentoVidaSlider
    -Spinner<Integer> montanaTurnosRestantesSpinner
    -Slider probAparMontanaSlider
    -Slider montanaDisminucionVidaSlider
    -Spinner<Integer> tesoroTurnosRestantesSpinner
    -Slider probAparTesoroSlider
    -Slider aumentoProbReproSlider
    -Spinner<Integer> bibliotecaTurnosRestantesSpinner
    -Slider probAparBibliotecaSlider
    -Slider aumentoProbClonSlider
    -Spinner<Integer> pozoTurnosRestantesSpinner
    -Slider probAparPozoSlider
    -Slider filasSlider
    -Slider columnasSlider
    -Logger log
    -DatosJuego dato
    -DatosJuegoProperties propiedades
    +XPersonalizacionController()
    +void initialize(URL, ResourceBundle)
    +void initializeController()
    +DatosJuego getDato()
    +void setDato(DatosJuego)
    +void initializeSpinners()
    +void actualizarDato()
    +void addFiltroSpinner(Spinner<Integer>)
    +void addFiltroSpinner2(Spinner<Double>)
    +void setControllerValues(DatosJuego)
    +void onBottonGuardarClick(ActionEvent)
    +void continuarZombieStudentsLife(ActionEvent)
    +void comenzarNuevoJuego()
    +void onBottonReiniciarClick()
    +void onBottonVolverClick(ActionEvent)
}

XPersonalizacionController ..> DatosJuego : uses
XPersonalizacionController ..> DatosJuegoProperties : uses
XPersonalizacionController ..> Tab : uses
XPersonalizacionController ..> Button : uses
XPersonalizacionController ..> TabPane : uses
XPersonalizacionController ..> Spinner : uses
XPersonalizacionController ..> Slider : uses
XPersonalizacionController ..> Logger : uses
XPersonalizacionController ..> URL : uses
XPersonalizacionController ..> ResourceBundle : uses
XPersonalizacionController ..> ActionEvent : uses



@enduml