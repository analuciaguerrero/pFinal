@startuml
'https://plantuml.com/class-diagram

package excepciones{
    class BalanceExcepcion extends RuntimeException {
    }
    class CaminoNulo extends RuntimeException {
    }
    class ClaseErroneaException extends RuntimeException {
        - static Logger log

        + ClaseErroneaException(String subclase, String superclase)
    }
    class DuplicateElement extends Exception {
    }
    class EstudianteNoExistente extends RuntimeException {
    }
    class IncrementoNoValido extends IllegalArgumentException {
    }
    class NoHayFicherosIniciales extends Exception {
    }
    class NonexistentElement extends Exception {
    }
    class NonValidLink extends Exception {
    }
    class PadresException extends RuntimeException {
    }
    class ProbabilidadNoValida extends IllegalArgumentException {
    }
    class RecursoNoExistente extends RuntimeException {
    }
    class RecursosNoUtilizados extends RuntimeException {
        - Estudiante estudiante

        + RecursosNoUtilizados(Estudiante estudiante)
        + Estudiante getEstudiante()
    }
    class TamañoArrayInvalido extends RuntimeException {
    }
    class VentanaNoEsperada extends RuntimeException {
    }
    class VoidLevel extends Exception {
    }

    class IllegalArgumentException {
    }
    class Exception {
    }
    class RuntimeException {
    }
}

package tablero{
    class Celda extends AnchorPane {
        - int posicionN
        - int posicionM
        - ListaEnlazada<Estudiante> listaEstudiantes
        - ListaEnlazada<Recursos> listaRecursos
        - DatosJuego dato
        - Tablero tablero
        - Button botonCelda
        - GridPane gridElms
        - static Logger log

        + Celda()
        + Celda(int posicionN, int posicionM)
        + Celda(int posicionN, int posicionM, ListaEnlazada<Estudiante> listaEstudiantes, ListaEnlazada<Recursos> listaRecursos)
        + Celda(ListaEnlazada<Estudiante> listaEstudiantes, ListaEnlazada<Recursos> listaRecursos)
        + Celda(int posicionN, int posicionM, DatosJuego dato, Tablero tablero)

        + int getPosicionN()
        + void setPosicionN(int posicionN)
        + int getPosicionM()
        + void setPosicionM(int posicionM)
        + int[] getPosicion()
        + ListaEnlazada<Recursos> getListaRecursos()
        + void setListaRecursos(ListaEnlazada<Recursos> listaRecursos)
        + ListaEnlazada<Estudiante> getListaEstudiantes()
        + void setListaEstudiantes(ListaEnlazada<Estudiante> listaEstudiantes)
        + DatosJuego getDatos()
        + void setDatos(DatosJuego dato)
        + Tablero getTablero()
        + void setTablero(Tablero tablero)
        + Button getBotonCelda()
        + GridPane getGridElms()
        + void agregarEstudiante(Estudiante estudiante, boolean nuevoEstudiante) throws EstudianteNoExistente
        + void agregarRecurso(Recursos recurso, boolean nuevoRecurso) throws RecursoNoExistente
        + void eliminarEstudiante(Estudiante estudiante)
        + void eliminarRecurso(Recursos recurso)
        + void crearCeldaAleatoria(DatosJuego dato)
        + void eliminarEstudianteAleatorio()
        + void eliminarRecursoAleatorio()
        + void restablecerInterfazVisual()
    }
    class CeldaProperties {
        - ListaEnlazada<Celda> original
        - ListaEnlazada<Celda> properties

        + CeldaProperties(ListaEnlazada<Celda> original)
        + ListaEnlazada<Celda> getOriginal()
        + void setOriginal(ListaEnlazada<Celda> original)
        + ListaEnlazada<Celda> getProperties()
        + void setProperties(ListaEnlazada<Celda> properties)
        + void commit()
        + void rollback()
    }
    class Tablero {
        - DatosJuego dato
        - ListaSimple<ListaSimple<Celda>> celdas
        - static Logger log

        + Tablero()
        + Tablero(int filas, int columnas, DatosJuego dato)
        + Celda getCelda(int[] posicion)
        + Celda getCelda(int fila, int columna)
        + void setCelda(int fila, int columna, Celda celda)
        + int getNumFilas()
        + int getNumColumnas()
        + DatosJuego getDato()
        + void setDato(DatosJuego dato)
    }
}

package usuario{
    class Jugador implements Serializable {
        + String nombre
        + String dni
        + String dificultad
        + int puntuacion
        + int partidasJugadas
        + int partidasGanadas
        + int partidasPerdidas
        - ListaSimple<String> dificultades
        - ListaSimple<Integer> puntosPartidas

        + Jugador(String dni)
        + ListaSimple<String> getDificultades()
        + void addDificultad(String dificultad)
        + ListaSimple<Integer> getPuntosPartida()
        + void addPuntos(int puntos)
        + String getNombre()
        + void setNombre(String nombre)
        + String getDni()
        + void setDni(String dni)
        + int getPuntuacion()
        + void addPuntuacion(int puntos)
        + void setPuntuacion(int puntuacion)
        + String getDificultad()
        + void setDificultad(String dificultad)
        + int getPartidasJugadas()
        + void setPartidasJugadas(int partidasJugadas)
        + void addPartidaJugada()
        + void addPartidaGanada()
        + void addPartidaPerdida()
        + int getPartidasGanadas()
        + void setPartidasGanadas(int partidasGanadas)
        + int getPartidasPerdidas()
        + void setPartidasPerdidas(int partidasPerdidas)
    }
}

package zombieStudentsLife{
    class ZombieStudentsLife {
        - static Logger log
        - DatosJuego dato
        - Tablero tablero
        - BucleDeControl bucle
        - Mapa<Estudiante, BST<Estudiante>> arbolGenealogico
        - Grafo<String> grafoDeOperaciones

        + ZombieStudentsLife(DatosJuego dato, boolean selec)
        + ZombieStudentsLife(DatosJuego dato, Tablero tablero)
        + DatosJuego getDato()
        + void setDato(DatosJuego dato)
        + Tablero getTablero()
        + void setTablero(Tablero tablero)
        + BucleDeControl getBucle()
        + void setBucle(BucleDeControl bucle)
        + Mapa<Estudiante, BST<Estudiante>> getArbolGenealogico()
        + Grafo<String> getGrafoDeOperaciones()
        + void start(boolean turno)
        - void addPadres(Nodo<Estudiante> hijo)
        - Mapa<Estudiante, BST<Estudiante>> crearArbolGenealogico()
        - Grafo<String> crearGrafoDeOperaciones()
        + void informacion()
        + void finalizarPartida()
    }
}

class DatosJuego {
    -ListaEnlazada<Estudiante> estudiantes
    -ListaEnlazada<Recursos> recursos
    -ListaEnlazada<Estudiante> historialEstudiantes
    -ListaEnlazada<Recursos> historialRecursos
    -int numRecursos
    -int numEstudiantes
    -int maximoEstudiantesPorCelda
    -int maximoRecursosPorCelda
    -int filasDelTablero
    -int columnasDelTablero
    -double probRecurso
    -int turnosIniciales
    -double probAgua
    -double probComida
    -double probMontana
    -double probTesoro
    -double probBiblioteca
    -double probPozo
    -double aumentoVidaAgua
    -double aumentoVidaComida
    -double reduccionVidaMontana
    -double aumentoProbReproduccion
    -double aumentoProbClonacion
    -int turnosRestantesAgua
    -int turnosRestantesComida
    -int turnosRestantesMontana
    -int turnosRestantesBiblioteca
    -int turnosRestantesTesoro
    -int turnosRestantesPozo
    -int turnosVidaIniciales
    -double probReproduccionEstudiante
    -double probClonacionEstudiante
    -double probMejorarANormal
    -double probMejorarAAvanzado
    -Boolean isPausado
    -boolean isSave
    -String rutaArchivo
    -ZombieStudentsLife zombieStudentsLife
    -int turnoActual
    +DatosJuego(int, double, double, double, double, double, int, double, double, double, double, double, double, int, int, double, double, int, int, int)
    +DatosJuego()
    // Métodos getter y setter
    +int getTurnosVidaIniciales()
    +void setTurnosVidaIniciales(int)
    +int getTurnosRestantesAgua()
    +void setTurnosRestantesAgua(int)
    +int getTurnosRestantesComida()
    +void setTurnosRestantesComida(int)
    +int getTurnosRestantesMontana()
    +void setTurnosRestantesMontana(int)
    +int getTurnosRestantesBiblioteca()
    +void setTurnosRestantesBiblioteca(int)
    +int getTurnosRestantesTesoro()
    +void setTurnosRestantesTesoro(int)
    +int getTurnosRestantesPozo()
    +void setTurnosRestantesPozo(int)
    +double getProbReproduccionEstudiante()
    +void setProbReproduccionEstudiante(double)
    +double getProbClonacionEstudiante()
    +void setProbClonacionEstudiante(double)
    +double getProbRecurso()
    +void setProbRecurso(double)
    +int getNumEstudiantes()
    +void setNumEstudiantes(int)
    +int getNumRecursos()
    +void setNumRecursos(int)
    +double getProbAgua()
    +void setProbAgua(double)
    +double getProbComida()
    +void setProbComida(double)
    +double getProbMontana()
    +void setProbMontana(double)
    +double getProbTesoro()
    +void setProbTesoro(double)
    +double getProbBiblioteca()
    +void setProbBiblioteca(double)
    +double getProbPozo()
    +void setProbPozo(double)
    +double getAumentoVidaAgua()
    +void setAumentoVidaAgua(double)
    +double getAumentoVidaComida()
    +void setAumentoVidaComida(double)
    +double getReduccionVidaMontana()
    +void setReduccionVidaMontana(double)
    +double getAumentoProbReproduccion()
    +void setAumentoProbReproduccion(double)
    +double getAumentoProbClonacion()
    +void setAumentoProbClonacion(double)
    +int getFilasDelTablero()
    +void setFilasDelTablero(int)
    +int getColumnasDelTablero()
    +void setColumnasDelTablero(int)
    +int getMaximoEstudiantesPorCelda()
    +void setMaximoEstudiantesPorCelda(int)
    +int getMaximoRecursosPorCelda()
    +void setMaximoRecursosPorCelda(int)
    +double getProbMejorarANormal()
    +void setProbMejorarANormal(double)
    +double getProbMejorarAAvanzado()
    +void setProbMejorarAAvanzado(double)
    +Boolean isPausado()
    +void setPausado(Boolean)
    +ZombieStudentsLife getZombieStudentsLife()
    +void setZombieStudentsLife(ZombieStudentsLife)
    +ListaEnlazada<Estudiante> getEstudiantes()
    +void setEstudiantes(ListaEnlazada<Estudiante>)
    +ListaEnlazada<Recursos> getRecursos()
    +void setRecursos(ListaEnlazada<Recursos>)
    +int getTurnoActual()
    +void setTurnoActual(int)
    +int getTurnosIniciales()
    +void setTurnosIniciales(int)
    +int generarEnteroAleatorio(int, int)
    +Celda celdaAleatoria(int, int)
    +Estudiante obtenerEstudianteAleatorio()
    +Recursos obtenerRecursoAleatorio()
    +boolean isSave()
    +void setSave(boolean)
    +String getRutaArchivo()
    +void setRutaArchivo(String)
    +ListaEnlazada<Estudiante> getHistorialEstudiantes()
    +void setHistorialEstudiantes(ListaEnlazada<Estudiante>)
    +ListaEnlazada<Recursos> getHistorialRecursos()
    +void setHistorialRecursos(ListaEnlazada<Recursos>)
    +void guardarArchivo(String)
    +static DatosJuego cargarArchivo(String)
}


DatosJuego ..> ListaEnlazada : uses
DatosJuego ..> ElementoLE : uses
DatosJuego ..> Estudiante : uses
DatosJuego ..> Recursos : uses
DatosJuego ..> Cola : uses
DatosJuego ..> GsonRecursos : uses
DatosJuego ..> GsonEstudiante : uses
DatosJuego ..> GsonListaSimple : uses
DatosJuego ..> GsonCola : uses
DatosJuego ..> Celda : uses
DatosJuego ..> ZombieStudentsLife : uses
DatosJuego ..> Gson : uses
DatosJuego ..> GsonBuilder : uses
DatosJuego ..> Random : uses
DatosJuego ..> FileWriter : uses
DatosJuego ..> FileReader : uses
DatosJuego ..> IOException : throws

class DatosJuegoProperties {
    -DatosJuego dato
    -IntegerProperty filasDelTablero
    -IntegerProperty columnasDelTablero
    -ObjectProperty<Integer> turnosVidaIniciales
    -ObjectProperty<Integer> turnosRestantesAgua
    -ObjectProperty<Integer> turnosRestantesComida
    -ObjectProperty<Integer> turnosRestantesMontana
    -ObjectProperty<Integer> turnosRestantesBiblioteca
    -ObjectProperty<Integer> turnosRestantesTesoro
    -ObjectProperty<Integer> turnosRestantesPozo
    -DoubleProperty probReproEstudiante
    -DoubleProperty probClonEstudiante
    -DoubleProperty probMejoraToNormal
    -DoubleProperty probMejoraToAvanzado
    -DoubleProperty probAgua
    -DoubleProperty probComida
    -DoubleProperty probMontana
    -DoubleProperty probTesoro
    -DoubleProperty probBiblioteca
    -DoubleProperty probPozo
    -DoubleProperty aumentoTurnosAgua
    -DoubleProperty aumentoTurnosComida
    -DoubleProperty reduccionTurnosMontana
    -DoubleProperty aumentoProbRepro
    -DoubleProperty aumentoProbClon
    -static final Logger log
    +DatosJuegoProperties(DatosJuego)
    +DatosJuego getDato()
    +void setDato(DatosJuego)
    +void setDatoInitialize(DatosJuego)
    +void commit()
    +void rollback(Tab)
    +ObjectProperty<Integer> turnosVidaInicialesProperty()
    +Property<Number> probReproEstudianteProperty()
    +Property<Number> probClonEstudianteProperty()
    +Property<Number> probMejorarANormalProperty()
    +Property<Number> probMejorarAAvanzadoProperty()
    +Property<Number> probAguaProperty()
    +Property<Number> probComidaProperty()
    +Property<Number> probMontanaProperty()
    +Property<Number> probTesoroProperty()
    +Property<Number> probBibliotecaProperty()
    +Property<Number> probPozoProperty()
    +ObjectProperty<Integer> turnosRestantesAguaProperty()
    +ObjectProperty<Integer> turnosRestantesComidaProperty()
    +ObjectProperty<Integer> turnosRestantesMontanaProperty()
    +ObjectProperty<Integer> turnosRestantesBibliotecaProperty()
    +ObjectProperty<Integer> turnosRestantesTesoroProperty()
    +ObjectProperty<Integer> turnosRestantesPozoProperty()
    +Property<Number> aumentoTurnosAguaProperty()
    +Property<Number> aumentoTurnosComidaProperty()
    +Property<Number> reduccionTurnosMontanaProperty()
    +Property<Number> aumentoProbReproProperty()
    +Property<Number> aumentoProbClonProperty()
    +Property<Number> filasDelTableroProperty()
    +Property<Number> columnasDelTableroProperty()
    -void rollbackEstudiantes()
    -void rollbackRecursos()
    -void rollbackTablero()
}

DatosJuegoProperties ..> DatosJuego : uses
DatosJuegoProperties ..> Tab : uses
DatosJuegoProperties ..> IntegerProperty : uses
DatosJuegoProperties ..> ObjectProperty : uses
DatosJuegoProperties ..> DoubleProperty : uses
DatosJuegoProperties ..> Property : uses
DatosJuegoProperties ..> Logger : uses


@enduml
